package com.js.event;

public class BaseEvent<T extends Object, V extends Object> implements Event<T, V> {

	/*
	 * Event type
	 */
	private T eventType;

	/*
	 * Event data
	 */
	private V eventData;

	/**
	 * Create a new blank instance. Keep in mind, no event type will be generated by
	 * default, so you will need to set it via 'set' method.
	 */
	public BaseEvent() {
	}

	/**
	 * Create new event with the given event type and 'null' event data
	 * 
	 * @param eventType event type
	 */
	public BaseEvent(T eventType) {
		super();
		this.eventType = eventType;
	}

	/**
	 * Create new instance with the given event type and event data
	 * 
	 * @param eventType event type
	 * @param eventData event data
	 */
	public BaseEvent(T eventType, V eventData) {
		super();
		this.eventType = eventType;
		this.eventData = eventData;
	}

	/**
	 * Set event data object
	 * 
	 * @param data event data object
	 */
	public void setEventData(V data) {
		this.eventData = data;
	}

	/**
	 * Get event data object
	 */
	public V getEventData() {
		return eventData;
	}

	/**
	 * Set event type object
	 * 
	 * @param eventType event type object
	 */
	public void setEventType(T eventType) {
		this.eventType = eventType;
	}

	/**
	 * Get event type object
	 */
	public T getEventType() {
		return eventType;
	}

}
